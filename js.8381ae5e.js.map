{"version":3,"sources":["js/models/Particula.js","js/controllers/QuadroParticulasController.js","js/index.js"],"names":["Particula","context","drawContext","drawContextWidthLimit","canvas","clientWidth","drawContextHeightLimit","clientHeight","radius","vPosition","x","Math","random","y","speed","directionAngle","floor","vSpeed","cos","sin","beginPath","arc","PI","closePath","fillStyle","fill","update","checkBoudaries","particula","outrasParticulas","contexto","distMin","p","distancia","hypot","opacity","linetWidth","strokeStyle","moveTo","lineTo","stroke","QuadroParticulasController","elCanvas","document","querySelector","elQaudro","width","height","ctx","getContext","particulas","i","push","render","requestAnimationFrame","bind","clearRect","forEach","draw","linkParticulas","fillRect","quadroParticulasController"],"mappings":"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","file":"js.8381ae5e.js","sourceRoot":"..\\src","sourcesContent":["export default class Particula {\r\n\r\n    constructor(context) {\r\n        this.drawContext = context;\r\n        this.drawContextWidthLimit = this.drawContext.canvas.clientWidth;\r\n        this.drawContextHeightLimit = this.drawContext.canvas.clientHeight;\r\n\r\n        this.radius = 7;\r\n        this.vPosition = {\r\n            x: Math.random() * this.drawContextWidthLimit,\r\n            y: Math.random() * this.drawContextHeightLimit\r\n        };        \r\n        this.speed = 1.5;\r\n        this.directionAngle = Math.floor(Math.random() * 360);\r\n        this.vSpeed = {\r\n            x: (Math.cos(this.directionAngle) * this.speed),\r\n            y: (Math.sin(this.directionAngle) * this.speed)\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.drawContext.beginPath();\r\n        this.drawContext.arc( this.vPosition.x, this.vPosition.y, this.radius, 0, Math.PI*2);\r\n        this.drawContext.closePath();\r\n        this.drawContext.fillStyle = '#FFF';\r\n        this.drawContext.fill();\r\n\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        this.checkBoudaries();\r\n        this.vPosition.x += this.vSpeed.x; \r\n        this.vPosition.y += this.vSpeed.y; \r\n    }\r\n\r\n    checkBoudaries() {\r\n        if ( this.vPosition.x < 0 || this.vPosition.x > this.drawContextWidthLimit ) {\r\n            this.vSpeed.x *= -1;\r\n        }\r\n\r\n        if ( this.vPosition.y < 0 || this.vPosition.y > this.drawContextHeightLimit ) {\r\n            this.vSpeed.y *= -1;\r\n        }\r\n    }\r\n\r\n    static linkParticulas(particula,  outrasParticulas, contexto) {\r\n        this.distMin = 100;\r\n        for (const p of outrasParticulas) {\r\n            const distancia = Math.hypot( (p.vPosition.x - particula.vPosition.x) , (p.vPosition.y - particula.vPosition.y) );\r\n            if (distancia< this.distMin)\r\n            {\r\n                const opacity = 1 - distancia/this.distMin;\r\n                contexto.linetWidth = 1;\r\n                contexto.strokeStyle = `rgba(255,255,255,${opacity})`;\r\n                contexto.beginPath();\r\n                contexto.moveTo(particula.vPosition.x, particula.vPosition.y);\r\n                contexto.lineTo(p.vPosition.x, p.vPosition.y);\r\n                contexto.stroke();\r\n            }\r\n        }\r\n    }\r\n}","import Particula from '../models/Particula'\r\n\r\nexport default class QuadroParticulasController{\r\n\r\n    constructor() {\r\n\r\n        // conect to DOM\r\n        const elCanvas = document.querySelector('#canvas');\r\n        const elQaudro = document.querySelector('#quadroPacticulas');\r\n    \r\n        // Faz com que o canvas ocupe o mesmo tamanho do quadro\r\n        elCanvas.width = elQaudro.clientWidth;\r\n        elCanvas.height = elQaudro.clientHeight;\r\n    \r\n        // Dando contexto ao cnavas\r\n        this.ctx = elCanvas.getContext('2d');\r\n    \r\n        this.particulas = [];\r\n\r\n        for (var i=0; i<35; i++){\r\n            this.particulas.push( new Particula(this.ctx) );\r\n        }  \r\n\r\n        this.x = 0;\r\n        this.render();\r\n    }\r\n\r\n    render(){\r\n        \r\n        // Criando o looping de renderização\r\n        requestAnimationFrame(this.render.bind(this));\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.clientWidth , this.ctx.canvas.clientHeight);\r\n\r\n        this.particulas.forEach (particula => {\r\n            particula.draw(this.ctx);\r\n            Particula.linkParticulas(particula, this.particulas, this.ctx);        \r\n        });\r\n\r\n        // Desenhando quadrado teste\r\n        this.ctx.fillStyle = '#F00';\r\n        this.ctx.fillRect(this.x, 0, 100, 100);\r\n        // animando\r\n        this.x++;        \r\n    }\r\n}\r\n","import QuadroParticulasController from './controllers/QuadroParticulasController'\r\n\r\nlet quadroParticulasController = new QuadroParticulasController();\r\n\r\n"]}